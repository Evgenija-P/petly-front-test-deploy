{"version":3,"file":"static/js/79.96feab33.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\r\nimport { Form, Field } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport MaskedInput from 'react-text-mask';\r\nimport mobileBackground from '../../img/Auth/bg-auth-mobile.png';\r\nimport tabletBackground from '../../img/Auth/bg-auth-tablet.png';\r\nimport desktopBackground from '../../img/Auth/bg-auth-desctop.png';\r\n\r\nexport const FormContainer = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 58px);\r\n  background-image: url(${mobileBackground});\r\n  background-position: bottom;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  ${media.tabletAndDesktop} {\r\n    background-image: url(${tabletBackground});\r\n    padding-top: 184px;\r\n    padding-bottom: 268px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n  ${media.desktop} {\r\n    background-image: url(${desktopBackground});\r\n    padding-top: 50px;\r\n    padding-bottom: 147px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: ${fontWeights.bold};\r\n  margin-bottom: 40px;\r\n  margin-top: 0;\r\n  ${media.tabletAndDesktop} {\r\n    font-size: 36px;\r\n    font-weight: ${fontWeights.medium};\r\n  }\r\n`;\r\nexport const FormRegister = styled(Form)`\r\n  position: relative;\r\n  width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 44px;\r\n  padding-bottom: 40px;\r\n  margin: 0 auto;\r\n  ${media.tabletAndDesktop} {\r\n    width: 608px;\r\n    margin: 0 auto;\r\n    padding: 60px 0 40px 0;\r\n    background-color: ${colors.white};\r\n    border-radius: 40px;\r\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\r\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\r\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\r\n  }\r\n  ${media.desktop} {\r\n    width: 618px;\r\n    padding: 60px 0 60px 0;\r\n  }\r\n  > div {\r\n    position: relative;\r\n  }\r\n`;\r\nexport const ShowPassword = styled.span`\r\n  display: inline-block;\r\n  position: absolute;\r\n  width: 25px;\r\n  height: 25px;\r\n  right: 15px;\r\n  top: 13px;\r\n  color: grey;\r\n  cursor: pointer;\r\n  svg {\r\n    width: inherit;\r\n    height: inherit;\r\n  }\r\n`;\r\nexport const Input = styled(Field)`\r\n  width: 280px;\r\n  font-size: 14px;\r\n  line-height: 1.3;\r\n  padding: 11px 0 12px 14px;\r\n  background: ${colors.background};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin-bottom: 16px;\r\n  &:focus,\r\n  &:hover {\r\n    outline: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 448px;\r\n    font-size: 18px;\r\n    padding: 14px 0 13px 32px;\r\n  }\r\n  ${media.desktop} {\r\n    width: 458px;\r\n  }\r\n`;\r\nexport const PhoneInput = styled(MaskedInput)`\r\n  width: 280px;\r\n  padding: 11px 0 12px 14px;\r\n  background: ${colors.background};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin-bottom: 16px;\r\n  &:focus,\r\n  &:hover {\r\n    outline: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 448px;\r\n    padding: 14px 0 13px 32px;\r\n    font-size: 18px;\r\n  }\r\n  ${media.desktop} {\r\n    width: 458px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  padding: 11px 0 12px 14px;\r\n  text-align: center;\r\n  color: ${colors.white};\r\n  background: ${colors.accent};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin: 24px 0 40px 0;\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    transition: transform 0.5s;\r\n  }\r\n  :hover:before {\r\n    left: 100%;\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${colors.gradient};\r\n    transition: all 450ms;\r\n  }\r\n  :disabled {\r\n    opacity: 0.5;\r\n    cursor: auto;\r\n    transform: none;\r\n    transition: none;\r\n  }\r\n  :disabled:before {\r\n    transform: none;\r\n    transition: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 458px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport const BackButton = styled.button`\r\n  width: 100%;\r\n  padding: 11px 0 12px 14px;\r\n  text-align: center;\r\n  color: #000;\r\n  background: ${colors.white};\r\n  border: 1px solid ${colors.accent};\r\n  border-radius: 40px;\r\n  margin: -26px 0 40px 0;\r\n  cursor: pointer;\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    transition: transform 0.5s;\r\n  }\r\n  :hover:before {\r\n    left: 100%;\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${colors.gradient};\r\n    transition: all 450ms;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 458px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport const ErrBox = styled.div`\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  bottom: 0px;\r\n  left: 15px;\r\n  color: red;\r\n  font-size: 14px;\r\n  ${media.tabletAndDesktop} {\r\n    left: 25px;\r\n  }\r\n`;\r\nexport const StyledLink = styled(Link)`\r\n  color: ${colors.blue};\r\n  margin-left: 4px;\r\n  :hover,\r\n  :focus {\r\n    color: ${colors.accent};\r\n  }\r\n`;\r\nexport const BoxText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 12px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik, Formik } from 'formik';\r\nimport { object, string, ref } from 'yup';\r\nimport Spinner from '../Spinner';\r\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\r\n\r\nimport { selectIsLoading } from '../../redux/auth/selectors';\r\nimport { register } from '../../redux/auth/operations';\r\n\r\nimport {\r\n  emailRegex,\r\n  phoneRegexp,\r\n  cityRegexp,\r\n  userNameRegexp,\r\n  passwordRegexp,\r\n} from '../../helpers/regExpsHelpers';\r\nimport {\r\n  FormRegister,\r\n  FormContainer,\r\n  Input,\r\n  Button,\r\n  Title,\r\n  ErrBox,\r\n  BackButton,\r\n  PhoneInput,\r\n  ShowPassword,\r\n  StyledLink,\r\n  BoxText,\r\n} from './RegisterForm.styled';\r\n\r\nconst phoneNumberMask = [\r\n  '+',\r\n  '3',\r\n  '8',\r\n  '0',\r\n  // '(',\r\n  /\\d/,\r\n  /\\d/,\r\n  // ')',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  // '-',\r\n  /\\d/,\r\n  /\\d/,\r\n  // '-',\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n\r\nconst registerSchema = object().shape({\r\n  password: string()\r\n    .min(7, 'Too Short!')\r\n    .max(32, 'Too Long!')\r\n    .matches(passwordRegexp, 'Invalid password')\r\n    .required('Password is required'),\r\n  confirmPassword: string()\r\n    .required('Please confirm your password')\r\n    .oneOf([ref('password')], 'Passwords does not match'),\r\n  email: string()\r\n    .matches(emailRegex, 'Invalid email')\r\n    .email('Invalid email')\r\n    .required('Email is required'),\r\n  name: string()\r\n    .min(2, 'min 2 symbols')\r\n    .matches(userNameRegexp, 'Only letters')\r\n    .required('Name is required'),\r\n  phone: string()\r\n    .min(13, 'Too Short!')\r\n    .matches(phoneRegexp, 'bad phone number')\r\n    .required('Phone is required'),\r\n  city: string()\r\n    .matches(cityRegexp, 'Error. Example: Brovary, Kyiv')\r\n    .required('City is required'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const [isShown, setIsShown] = useState(true);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\r\n  const loading = useSelector(selectIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const showForm = () => {\r\n    setIsShown(false);\r\n  };\r\n  const hideForm = () => {\r\n    setIsShown(true);\r\n  };\r\n\r\n  const onSubmit = values => {\r\n    const { name, email, password, phone, city } = values;\r\n    dispatch(\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n        phone,\r\n        city,\r\n      }),\r\n      hideForm()\r\n    );\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      phone: '',\r\n      city: '',\r\n    },\r\n    validationSchema: registerSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  const isValid =\r\n    (formik.errors.email && formik.touched.email) ||\r\n    (formik.errors.password && formik.touched.password) ||\r\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\r\n    formik.values.email === '' ||\r\n    formik.values.confirmPassword === ''\r\n      ? true\r\n      : false;\r\n\r\n  const showPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n  const showConfirmPassword = () => {\r\n    setShowConfirmPass(!showConfirmPass);\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <FormContainer>\r\n          <Formik validationSchema={registerSchema}>\r\n            <FormRegister onSubmit={formik.handleSubmit}>\r\n              <Title>Register</Title>\r\n              {isShown && (\r\n                <>\r\n                  <div>\r\n                    <Input\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.email}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n\r\n                    {formik.errors.email || formik.touched.email ? (\r\n                      <ErrBox>{formik.errors.email}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {isShown && (\r\n                <>\r\n                  <div>\r\n                    <Input\r\n                      name=\"password\"\r\n                      type={showPass ? 'text' : 'password'}\r\n                      placeholder=\"Password\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.password}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n\r\n                    <ShowPassword onClick={showPassword}>\r\n                      {!showPass ? <ImEyeBlocked /> : <ImEye />}\r\n                    </ShowPassword>\r\n                    {formik.errors.password && formik.touched.password ? (\r\n                      <ErrBox>{formik.errors.password}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {isShown && (\r\n                <>\r\n                  <div>\r\n                    <Input\r\n                      name=\"confirmPassword\"\r\n                      type={showConfirmPass ? 'text' : 'password'}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.confirmPassword}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    <ShowPassword onClick={showConfirmPassword}>\r\n                      {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\r\n                    </ShowPassword>\r\n                    {formik.errors.confirmPassword &&\r\n                    formik.touched.confirmPassword ? (\r\n                      <ErrBox>{formik.errors.confirmPassword}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {isShown && (\r\n                <Button type=\"button\" onClick={showForm} disabled={isValid}>\r\n                  Next\r\n                </Button>\r\n              )}\r\n              {!isShown && (\r\n                <>\r\n                  <div>\r\n                    <Input\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.name}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n\r\n                    {formik.errors.name && formik.touched.name ? (\r\n                      <ErrBox>{formik.errors.name}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {!isShown && (\r\n                <>\r\n                  <div>\r\n                    <Input\r\n                      name=\"city\"\r\n                      type=\"text\"\r\n                      placeholder=\"City, region\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.city}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n\r\n                    {formik.errors.city && formik.touched.city ? (\r\n                      <ErrBox>{formik.errors.city}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {!isShown && (\r\n                <>\r\n                  <div>\r\n                    <PhoneInput\r\n                      mask={phoneNumberMask}\r\n                      id=\"phone\"\r\n                      type=\"phone\"\r\n                      placeholder=\"Mobile phone\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.phone}\r\n                      onBlur={formik.handleBlur}\r\n                      name=\"phone\"\r\n                    />\r\n\r\n                    {formik.errors.phone && formik.touched.phone ? (\r\n                      <ErrBox>{formik.errors.phone}</ErrBox>\r\n                    ) : null}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {!isShown && <Button type=\"submit\">Register</Button>}\r\n              {!isShown && (\r\n                <BackButton type=\"button\" onClick={hideForm}>\r\n                  Back\r\n                </BackButton>\r\n              )}\r\n              <BoxText>\r\n                <span>Already have an account?</span>{' '}\r\n                <StyledLink to=\"/login\">Login</StyledLink>\r\n              </BoxText>\r\n            </FormRegister>\r\n          </Formik>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from '../components/RegisterForm';\r\n\r\nexport default function Register() {\r\n  return (\r\n    <>\r\n      <RegisterForm />\r\n    </>\r\n  );\r\n}\r\n"],"names":["FormContainer","styled","mobileBackground","media","tabletBackground","desktopBackground","Title","fontWeights","FormRegister","Form","colors","ShowPassword","Input","Field","PhoneInput","MaskedInput","Button","BackButton","ErrBox","StyledLink","Link","BoxText","phoneNumberMask","registerSchema","object","shape","password","string","min","max","matches","passwordRegexp","required","confirmPassword","oneOf","ref","email","emailRegex","name","userNameRegexp","phone","phoneRegexp","city","cityRegexp","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","loading","useSelector","selectIsLoading","dispatch","useDispatch","hideForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","isValid","errors","touched","Spinner","handleSubmit","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","onClick","disabled","mask","id","to","Register"],"sourceRoot":""}